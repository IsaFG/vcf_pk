definitive_table <- cbind(definitive_table, unnested_Table)
m = m + 1
print ("###################### NEXT VARIANT ##################################")
}
View(definitive_table)
TEST_table <- annotVariants_table[1:3,1:9]
# Add an index column to the TEST_table and move it to the start
TEST_table$ID <- seq.int(nrow(TEST_table))
TEST_table <- TEST_table %>%
select(ID, everything())
j = 1 # column iterator
m = 1 # variant iterator
# Create a new empty dataframe
definitive_table <- data.frame()
# colnames(definitive_table) <- ("ID")
f
for (var_row in TEST_table[m,]) {
j = 1
# Create a new dataframe from the TEST_table with only ID column
unnested_Table <- data.frame(TEST_table[m,1])
colnames(unnested_Table) <- ("ID")
current_row <- TEST_table[m,]
print (paste("PROCESSING VARIANT", m))
for (field in current_row) {
print (paste("Analising column", j, "with class", class(current_row[,j])))
one_class <- class(current_row[,j])
if (j < 10) {
print(j)
if (one_class == "list" ) {
print (paste("Unnesting List in column", j)) # testing line
# Copy only first (key ID) column and last (nested) column
processingTable <- current_row[,c(1,j)]
# Unnest the table so the table will expand according to the last column
unnesting <- unnest(processingTable)
# Merge the unnested table with the main table, according to the key ID
unnested_Table <- merge(unnested_Table, unnesting, by="ID")
print (paste("State of the table for column", j, "in variant", m))
print (unnested_Table) # testing line
} else {
print (paste("Pasting column", j)) # testing line
the_column <- current_row[,c(1,j)]
unnested_Table <- merge(unnested_Table, the_column, by="ID")
print (paste("State of the table for column", j, "in variant", m))
print (unnested_Table)
}
}
j = j + 1
print ("+++++++++++ nest colmun +++++++++++++++")
}
definitive_table <- bind_rows(definitive_table, unnested_Table)
m = m + 1
print ("###################### NEXT VARIANT ##################################")
}
View(definitive_table)
View(unnested_Table)
View(annotVariants_table)
View(TEST_table)
TEST_table <- annotVariants_table[1:3,1:9]
# Add an index column to the TEST_table and move it to the start
TEST_table$ID <- seq.int(nrow(TEST_table))
TEST_table <- TEST_table %>%
select(ID, everything())
j = 1 # column iterator
m = 1 # variant iterator
# Create a new empty dataframe
definitive_table <- data.frame()
# colnames(definitive_table) <- ("ID")
for (var_row in TEST_table[m,]) {
j = 1
# Create a new dataframe from the TEST_table with only ID column
unnested_Table <- data.frame(TEST_table[m,1])
colnames(unnested_Table) <- ("ID")
current_row <- TEST_table[m,]
print (paste("PROCESSING VARIANT", m))
for (field in current_row) {
print (paste("Analising column", j, "with class", class(current_row[,j])))
one_class <- class(current_row[,j])
if (j < 10) {
print(j)
if (one_class == "list" ) {
print (paste("Unnesting List in column", j)) # testing line
# Copy only first (key ID) column and last (nested) column
print ("Extracting rows")
processingTable <- current_row[,c(1,j)]
print ("unnesting rows)")
# Unnest the table so the table will expand according to the last column
unnesting <- unnest(processingTable)
print ("Merge")
# Merge the unnested table with the main table, according to the key ID
unnested_Table <- merge(unnested_Table, unnesting, by="ID")
print (paste("State of the table for column", j, "in variant", m))
print (unnested_Table) # testing line
} else {
print (paste("Pasting column", j)) # testing line
the_column <- current_row[,c(1,j)]
unnested_Table <- merge(unnested_Table, the_column, by="ID")
print (paste("State of the table for column", j, "in variant", m))
print (unnested_Table)
}
}
j = j + 1
print ("+++++++++++ neXt colmun +++++++++++++++")
}
definitive_table <- bind_rows(definitive_table, unnested_Table)
m = m + 1
print ("###################### NEXT VARIANT ##################################")
}
View(processingTable)
unnesting <- unnest(processingTable)
processingTable[2]
class(processingTable[2])
print (paste("Analising column", j, "with class", class(current_row[,j])))
current_row[,j]
current_row[,9]
processingTable[2]
bof <- current_row[,j]
bof
class(bof)
bof[[1]]
class(processingTable[2])
processingTable1 <- subset(current_row, select=c(1, j))
class(processingTable1[2])
class(bof[[1]])
TEST_table <- annotVariants_table[1:3]
View(TEST_table)
TEST_table <- annotVariants_table[,1:3]
TEST_table <- annotVariants_table[1:3,]
annotation_list <- colnames(annotVariants_table)
annotation_list
index_annot <- grep(chosen_annot, colnames(annotVariants_table))
chosen_annot <- annotation_list[8] # example
index_annot <- grep(chosen_annot, colnames(annotVariants_table))
for (var_row in TEST_table) {
j = 1
print ("LOL")
}
for (var_row in TEST_table) {
j = 1
print (var_row)
print ("LOL")
}
TEST_table <- annotVariants_table[1:3,]
TEST_table
for (var_row in TEST_table) {
j = 1
print names(var_row)
print ("LOL")
}
j = 1
for (var_row in TEST_table) {
if (j < 2) {
print (var_row)
print ("LOL")
j = j + 1
}
}
j = 1
for (var_row in TEST_table) {
if (j < 5) {
print (var_row)
print ("LOL")
j = j + 1
}
}
j = 1
for (var_row in TEST_table[,length(TEST_table)]) {
if (j < 5) {
print (var_row)
print ("LOL")
j = j + 1
}
}
j = 1
for (var_row in TEST_table) {
if (j < 5) {
print (var_row)
print ("LOL")
}
j = j + 1
}
j = 1
for (var_row in TEST_table) {
if (j < 5) {
print (var_row)
print ("LOL")
}
j = j + 1
}
j = 1
for (one_column in TEST_table) {
if (j < 5) {
print (one_column)
print ("Next")
}
j = j + 1
}
j = 1
for (one_column in TEST_table) {
if (j < 7) {
print (one_column)
print ("Next")
}
j = j + 1
}
j = 1
for (one_column in TEST_table) {
print paste(("Column", j))
if (j < 7) {
print (one_column)
print ("Next")
}
j = j + 1
}
j = 1
for (one_column in TEST_table) {
print (paste("Column", j))
if (j < 7) {
print (one_column)
print ("Next")
}
j = j + 1
}
j = 1
for (one_column in TEST_table) {
print (paste("Column", j))
if (j < 15) {
print (one_column)
print ("Next")
}
j = j + 1
}
j = 1
for (any_column in TEST_table) {
print (paste("Column", j))
if (j < 15) {
print (any_column)
}
j = j + 1
print ("+++++++++++++++++++++++++")
}
for (chosen_annot in TEST_table) {
print (paste("Column", j))
j = j + 1
print ("+++++++++++++++++++++++++")
}
for (chosen_annot in TEST_table) {
print (paste("Column", j))
print (chosen_annot)
j = j + 1
print ("+++++++++++++++++++++++++")
}
chosen_annot <- annotation_list[8] # example
TEST_table[[paste(chosen_annot)]]
chosen_column <- TEST_table[[paste(chosen_annot)]]
for (any_data in chosen_column) {
# any_data_ind <- grep(any_data, colnames(chosen_column))
print (class(any_data))
}
for (any_data in chosen_column) {
any_data_ind <- grep(any_data, colnames(chosen_column))
print (class(any_data))
}
for (any_data in chosen_column) {
print (class(any_data))
data_class <- class(any_data)
if (data_class == "data.frame")
print ("This data is a dataframe")
}
for (any_data in chosen_column) {
print (class(any_data))
data_class <- class(any_data)
if (data_class == "data.frame") {
print ("This data is a dataframe")
}
}
class(chosen_column)
chosen_column <- TEST_table[[paste(chosen_annot)]]
for (any_data in chosen_column) {
print (class(any_data))
data_class <- class(any_data)
if (data_class == "data.frame") {
print ("This data is a dataframe")
print (chosen_column)
}
}
for (any_data in chosen_column) {
print (class(any_data))
data_class <- class(any_data)
if (data_class == "data.frame") {
print ("This data is a dataframe")
print (any_data)
}
}
chosen_annot_table <- data.frame()
View(any_data)
basic_table <- annotVariants_table [1:3,1:5]
View(basic_table)
i = 1
for (any_var in chosen_column) {
print (class(any_var))
data_class <- class(any_var)
if (data_class == "data.frame") {
print ("This data is a dataframe")
cbind(annotVariants_table [1:i,1:5], any_var)
}
i = i + 1
}
for (any_var in chosen_column) {
print (class(any_var))
data_class <- class(any_var)
prechosen_table <- annotVariants_table[1:3,c(1:5, i)]
if (data_class == "data.frame") {
print ("This data is a dataframe")
# cbind(annotVariants_table [1:i,1:5], any_var)
}
i = i + 1
}
View(prechosen_table)
chosen_annot <- annotation_list[8] # example
# Get the index of the chosen annotation
index_annot <- grep(chosen_annot, colnames(annotVariants_table))
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
print (class(any_var))
data_class <- class(any_var)
prechosen_table <- annotVariants_table[1:3,c(1:5, index_annot)]
if (data_class == "data.frame") {
print ("This data is a dataframe")
# cbind(annotVariants_table [1:i,1:5], any_var)
}
i = i + 1
}
View(prechosen_table)
prechosen_table[6]
prechosen_table[1,6]
class(prechosen_table[1,6])
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
print (class(any_var))
data_class <- class(any_var)
prechosen_table <- annotVariants_table[1:3,c(1:5, index_annot)]
if (data_class == "data.frame") {
print ("This data is a dataframe")
unnesting_table <- unnest(prechosen_table)
# cbind(annotVariants_table [1:i,1:5], any_var)
}
i = i + 1
}
View(any_var)
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
print (class(any_var))
print (length(any_var))
data_class <- class(any_var)
# prechosen_table <- annotVariants_table[1:3,c(1:5, index_annot)]
if (data_class == "data.frame") {
print ("Yes, dataframe")
# cbind(annotVariants_table [1:i,1:5], any_var)
}
i = i + 1
}
df <- data.frame(a=1:2, b=letters[1:2])
df
df[rep(seq_len(nrow(df)), each=2),]
n.times <- c(2,4)
df[rep(seq_len(nrow(df)), n.times),]
df
df[rep(seq_len(nrow(df)), each=2),]
basic_row <- basic_table[i,]
asic_row
basic_row
i = 1
basic_row <- basic_table[i,]
basic_row
prechosen_table <- basic_row[rep(seq_len(nrow(df)), each=2),]
prechosen_table
prechosen_table <- basic_row[rep(seq_len(nrow(basic_row)), each=2),]
prechosen_table
data_length
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
print (class(any_var))
print (length(any_var))
data_class <- class(any_var)
data_length <- length(any_var)
basic_row <- basic_table[i,]
# Multiply rows by the length of the dataframe in the field
prechosen_table <- basic_row[rep(seq_len(nrow(basic_row)), each=data_length),]
# prechosen_table <- annotVariants_table[1:3,c(1:5, index_annot)]
if (data_class == "data.frame") {
print ("Yes, dataframe")
# cbind(annotVariants_table [1:i,1:5], any_var)
}
i = i + 1
}
prechosen_table
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
print (class(any_var))
print (length(any_var))
data_class <- class(any_var)
data_length <- length(any_var)
basic_row <- basic_table[i,]
# Multiply rows by the length of the dataframe in the field
prechosen_table <- basic_row[rep(seq_len(nrow(basic_row)), each=data_length),]
# prechosen_table <- annotVariants_table[1:3,c(1:5, index_annot)]
if (data_class == "data.frame") {
print ("Yes, dataframe")
# cbind(annotVariants_table [1:i,1:5], any_var)
}
chosen_annot_table <- bind_rows(chosen_annot_table, prechosen_table)
i = i + 1
}
chosen_annot_table
View(prechosen_table)
View(any_data)
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
print (class(any_var))
print (length(any_var))
data_class <- class(any_var)
data_length <- length(any_var)
basic_row <- basic_table[i,]
# Multiply rows by the length of the dataframe in the field
prechosen_table <- basic_row[rep(seq_len(nrow(basic_row)), each=data_length),]
# prechosen_table <- annotVariants_table[1:3,c(1:5, index_annot)]
if (data_class == "data.frame") {
print ("Yes, dataframe")
add_chosen_columns <- cbind(prechosen_table, any_var)
# cbind(annotVariants_table [1:i,1:5], any_var)
}
chosen_annot_table <- bind_rows(chosen_annot_table, add_chosen_columns)
i = i + 1
}
TEST_table <- annotVariants_table[1:3,]
basic_table <- annotVariants_table [1:3,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
# Print info
print (paste("Variant", i))
print (class(any_var))
print (paste("Lenght of the data",(length(any_var))))
print (paste("Dimension",(dim(any_var))))
# Assign variables
data_class <- class(any_var)
data_length <- length(any_var)
basic_row <- basic_table[i,]
# Multiply rows by the length of the dataframe in the data
prechosen_table <- basic_row[rep(seq_len(nrow(basic_row)), each=data_length),]
print
if (data_class == "data.frame") {
print ("Yes, dataframe")
# add_chosen_columns <- cbind(prechosen_table, any_var)
}
chosen_annot_table <- bind_rows(chosen_annot_table, prechosen_table)
i = i + 1
}
TEST_table <- annotVariants_table[1:2,]
basic_table <- annotVariants_table [1:2,1:5]
chosen_column <- TEST_table[[paste(chosen_annot)]]
chosen_annot_table <- data.frame()
i = 1
for (any_var in chosen_column) {
# Print info
print (paste("Variant", i))
print (class(any_var))
print (paste("Lenght of the data",(length(any_var))))
print (paste("Dimension",(dim(any_var))))
# Assign variables
data_class <- class(any_var)
data_length <- length(any_var)
basic_row <- basic_table[i,]
# Multiply rows by the length of the dataframe in the data
prechosen_table <- basic_row[rep(seq_len(nrow(basic_row)), each=data_length),]
print
if (data_class == "data.frame") {
print ("Yes, dataframe")
# add_chosen_columns <- cbind(prechosen_table, any_var)
}
chosen_annot_table <- bind_rows(chosen_annot_table, prechosen_table)
i = i + 1
}
View(prechosen_table)
View(chosen_annot_table)
View(any_var)
str(any_var)
